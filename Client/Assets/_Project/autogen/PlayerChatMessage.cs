// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

using System;

namespace SpacetimeDB
{
	public partial class PlayerChatMessage : IDatabaseTable
	{
		[Newtonsoft.Json.JsonProperty("player_id")]
		public ulong PlayerId;
		[Newtonsoft.Json.JsonProperty("msg_time")]
		public ulong MsgTime;
		[Newtonsoft.Json.JsonProperty("message")]
		public string Message;

		public static SpacetimeDB.SATS.AlgebraicType GetAlgebraicType()
		{
			return SpacetimeDB.SATS.AlgebraicType.CreateProductType(new SpacetimeDB.SATS.ProductTypeElement[]
			{
				new SpacetimeDB.SATS.ProductTypeElement("player_id", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64)),
				new SpacetimeDB.SATS.ProductTypeElement("msg_time", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64)),
				new SpacetimeDB.SATS.ProductTypeElement("message", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.String)),
			});
		}

		public static explicit operator PlayerChatMessage(SpacetimeDB.SATS.AlgebraicValue value)
		{
			if (value == null) {
				return null;
			}
			var productValue = value.AsProductValue();
			return new PlayerChatMessage
			{
				PlayerId = productValue.elements[0].AsU64(),
				MsgTime = productValue.elements[1].AsU64(),
				Message = productValue.elements[2].AsString(),
			};
		}

		public static System.Collections.Generic.IEnumerable<PlayerChatMessage> Iter()
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("PlayerChatMessage"))
			{
				yield return (PlayerChatMessage)entry.Item2;
			}
		}
		public static int Count()
		{
			return NetworkManager.clientDB.Count("PlayerChatMessage");
		}
		public static System.Collections.Generic.IEnumerable<PlayerChatMessage> FilterByPlayerId(ulong value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("PlayerChatMessage"))
			{
				var productValue = entry.Item1.AsProductValue();
				var compareValue = (ulong)productValue.elements[0].AsU64();
				if (compareValue == value) {
					yield return (PlayerChatMessage)entry.Item2;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<PlayerChatMessage> FilterByMsgTime(ulong value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("PlayerChatMessage"))
			{
				var productValue = entry.Item1.AsProductValue();
				var compareValue = (ulong)productValue.elements[1].AsU64();
				if (compareValue == value) {
					yield return (PlayerChatMessage)entry.Item2;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<PlayerChatMessage> FilterByMessage(string value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("PlayerChatMessage"))
			{
				var productValue = entry.Item1.AsProductValue();
				var compareValue = (string)productValue.elements[2].AsString();
				if (compareValue == value) {
					yield return (PlayerChatMessage)entry.Item2;
				}
			}
		}

		public static event Action<PlayerChatMessage> OnInsert;
		public static event Action<PlayerChatMessage, PlayerChatMessage> OnUpdate;
		public static event Action<PlayerChatMessage> OnDelete;
		public static event Action<NetworkManager.TableOp, PlayerChatMessage, PlayerChatMessage> OnRowUpdate;

		public static void OnInsertEvent(object newValue)
		{
			OnInsert?.Invoke((PlayerChatMessage)newValue);
		}

		public static void OnUpdateEvent(object oldValue, object newValue)
		{
			OnUpdate?.Invoke((PlayerChatMessage)oldValue,(PlayerChatMessage)newValue);
		}

		public static void OnDeleteEvent(object oldValue)
		{
			OnDelete?.Invoke((PlayerChatMessage)oldValue);
		}

		public static void OnRowUpdateEvent(NetworkManager.TableOp op, object oldValue, object newValue)
		{
			OnRowUpdate?.Invoke(op, (PlayerChatMessage)oldValue,(PlayerChatMessage)newValue);
		}
	}
}
