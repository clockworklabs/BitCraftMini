// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

using System;

namespace SpacetimeDB
{
	public partial class TradeSessionComponent : IDatabaseTable
	{
		[Newtonsoft.Json.JsonProperty("entity_id")]
		public ulong EntityId;
		[Newtonsoft.Json.JsonProperty("initiator_entity_id")]
		public ulong InitiatorEntityId;
		[Newtonsoft.Json.JsonProperty("acceptor_entity_id")]
		public ulong AcceptorEntityId;
		[Newtonsoft.Json.JsonProperty("acceptor_offer_inventory_entity_id")]
		public ulong AcceptorOfferInventoryEntityId;
		[Newtonsoft.Json.JsonProperty("initiator_offer_inventory_entity_id")]
		public ulong InitiatorOfferInventoryEntityId;
		[Newtonsoft.Json.JsonProperty("approved_by_initiator")]
		public bool ApprovedByInitiator;
		[Newtonsoft.Json.JsonProperty("approved_by_acceptor")]
		public bool ApprovedByAcceptor;

		public static SpacetimeDB.SATS.AlgebraicType GetAlgebraicType()
		{
			return SpacetimeDB.SATS.AlgebraicType.CreateProductType(new SpacetimeDB.SATS.ProductTypeElement[]
			{
				new SpacetimeDB.SATS.ProductTypeElement("entity_id", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64)),
				new SpacetimeDB.SATS.ProductTypeElement("initiator_entity_id", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64)),
				new SpacetimeDB.SATS.ProductTypeElement("acceptor_entity_id", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64)),
				new SpacetimeDB.SATS.ProductTypeElement("acceptor_offer_inventory_entity_id", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64)),
				new SpacetimeDB.SATS.ProductTypeElement("initiator_offer_inventory_entity_id", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64)),
				new SpacetimeDB.SATS.ProductTypeElement("approved_by_initiator", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.Bool)),
				new SpacetimeDB.SATS.ProductTypeElement("approved_by_acceptor", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.Bool)),
			});
		}

		public static explicit operator TradeSessionComponent(SpacetimeDB.SATS.AlgebraicValue value)
		{
			if (value == null) {
				return null;
			}
			var productValue = value.AsProductValue();
			return new TradeSessionComponent
			{
				EntityId = productValue.elements[0].AsU64(),
				InitiatorEntityId = productValue.elements[1].AsU64(),
				AcceptorEntityId = productValue.elements[2].AsU64(),
				AcceptorOfferInventoryEntityId = productValue.elements[3].AsU64(),
				InitiatorOfferInventoryEntityId = productValue.elements[4].AsU64(),
				ApprovedByInitiator = productValue.elements[5].AsBool(),
				ApprovedByAcceptor = productValue.elements[6].AsBool(),
			};
		}

		public static System.Collections.Generic.IEnumerable<TradeSessionComponent> Iter()
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("TradeSessionComponent"))
			{
				yield return (TradeSessionComponent)entry;
			}
		}
		public static int Count()
		{
			return NetworkManager.clientDB.Count("TradeSessionComponent");
		}
		public static TradeSessionComponent FilterByEntityId(ulong value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("TradeSessionComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (ulong)productValue.elements[0].AsU64();
				if (compareValue == value) {
					return (TradeSessionComponent)entry;
				}
			}
			return null;
		}

		public static System.Collections.Generic.IEnumerable<TradeSessionComponent> FilterByInitiatorEntityId(ulong value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("TradeSessionComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (ulong)productValue.elements[1].AsU64();
				if (compareValue == value) {
					yield return (TradeSessionComponent)entry;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<TradeSessionComponent> FilterByAcceptorEntityId(ulong value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("TradeSessionComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (ulong)productValue.elements[2].AsU64();
				if (compareValue == value) {
					yield return (TradeSessionComponent)entry;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<TradeSessionComponent> FilterByAcceptorOfferInventoryEntityId(ulong value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("TradeSessionComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (ulong)productValue.elements[3].AsU64();
				if (compareValue == value) {
					yield return (TradeSessionComponent)entry;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<TradeSessionComponent> FilterByInitiatorOfferInventoryEntityId(ulong value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("TradeSessionComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (ulong)productValue.elements[4].AsU64();
				if (compareValue == value) {
					yield return (TradeSessionComponent)entry;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<TradeSessionComponent> FilterByApprovedByInitiator(bool value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("TradeSessionComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (bool)productValue.elements[5].AsBool();
				if (compareValue == value) {
					yield return (TradeSessionComponent)entry;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<TradeSessionComponent> FilterByApprovedByAcceptor(bool value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("TradeSessionComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (bool)productValue.elements[6].AsBool();
				if (compareValue == value) {
					yield return (TradeSessionComponent)entry;
				}
			}
		}

		public static event Action<TradeSessionComponent> OnInsert;
		public static event Action<TradeSessionComponent, TradeSessionComponent> OnUpdate;
		public static event Action<TradeSessionComponent> OnDelete;
		public static event Action<NetworkManager.TableOp, TradeSessionComponent, TradeSessionComponent> OnRowUpdate;

		public static void OnInsertEvent(object newValue)
		{
			OnInsert?.Invoke((TradeSessionComponent)newValue);
		}

		public static void OnUpdateEvent(object oldValue, object newValue)
		{
			OnUpdate?.Invoke((TradeSessionComponent)oldValue,(TradeSessionComponent)newValue);
		}

		public static void OnDeleteEvent(object oldValue)
		{
			OnDelete?.Invoke((TradeSessionComponent)oldValue);
		}

		public static void OnRowUpdateEvent(NetworkManager.TableOp op, object oldValue, object newValue)
		{
			OnRowUpdate?.Invoke(op, (TradeSessionComponent)oldValue,(TradeSessionComponent)newValue);
		}
	}
}
