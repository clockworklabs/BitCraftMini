// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

using System;

namespace SpacetimeDB
{
	public partial class ResourceComponent : IDatabaseTable
	{
		[Newtonsoft.Json.JsonProperty("entity_id")]
		public ulong EntityId;
		[Newtonsoft.Json.JsonProperty("health")]
		public byte Health;
		[Newtonsoft.Json.JsonProperty("resource_id")]
		public byte ResourceId;
		[Newtonsoft.Json.JsonProperty("max_health")]
		public byte MaxHealth;
		[Newtonsoft.Json.JsonProperty("item_yield_id")]
		public byte ItemYieldId;
		[Newtonsoft.Json.JsonProperty("item_yield_quantity")]
		public byte ItemYieldQuantity;

		public static SpacetimeDB.SATS.AlgebraicType GetAlgebraicType()
		{
			return SpacetimeDB.SATS.AlgebraicType.CreateProductType(new SpacetimeDB.SATS.ProductTypeElement[]
			{
				new SpacetimeDB.SATS.ProductTypeElement("entity_id", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64)),
				new SpacetimeDB.SATS.ProductTypeElement("health", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U8)),
				new SpacetimeDB.SATS.ProductTypeElement("resource_id", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U8)),
				new SpacetimeDB.SATS.ProductTypeElement("max_health", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U8)),
				new SpacetimeDB.SATS.ProductTypeElement("item_yield_id", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U8)),
				new SpacetimeDB.SATS.ProductTypeElement("item_yield_quantity", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U8)),
			});
		}

		public static explicit operator ResourceComponent(SpacetimeDB.SATS.AlgebraicValue value)
		{
			if (value == null) {
				return null;
			}
			var productValue = value.AsProductValue();
			return new ResourceComponent
			{
				EntityId = productValue.elements[0].AsU64(),
				Health = productValue.elements[1].AsU8(),
				ResourceId = productValue.elements[2].AsU8(),
				MaxHealth = productValue.elements[3].AsU8(),
				ItemYieldId = productValue.elements[4].AsU8(),
				ItemYieldQuantity = productValue.elements[5].AsU8(),
			};
		}

		public static System.Collections.Generic.IEnumerable<ResourceComponent> Iter()
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("ResourceComponent"))
			{
				yield return (ResourceComponent)entry;
			}
		}
		public static int Count()
		{
			return NetworkManager.clientDB.Count("ResourceComponent");
		}
		public static ResourceComponent FilterByEntityId(ulong value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("ResourceComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (ulong)productValue.elements[0].AsU64();
				if (compareValue == value) {
					return (ResourceComponent)entry;
				}
			}
			return null;
		}

		public static System.Collections.Generic.IEnumerable<ResourceComponent> FilterByHealth(byte value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("ResourceComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (byte)productValue.elements[1].AsU8();
				if (compareValue == value) {
					yield return (ResourceComponent)entry;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<ResourceComponent> FilterByResourceId(byte value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("ResourceComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (byte)productValue.elements[2].AsU8();
				if (compareValue == value) {
					yield return (ResourceComponent)entry;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<ResourceComponent> FilterByMaxHealth(byte value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("ResourceComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (byte)productValue.elements[3].AsU8();
				if (compareValue == value) {
					yield return (ResourceComponent)entry;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<ResourceComponent> FilterByItemYieldId(byte value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("ResourceComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (byte)productValue.elements[4].AsU8();
				if (compareValue == value) {
					yield return (ResourceComponent)entry;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<ResourceComponent> FilterByItemYieldQuantity(byte value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("ResourceComponent"))
			{
				var productValue = entry.AsProductValue();
				var compareValue = (byte)productValue.elements[5].AsU8();
				if (compareValue == value) {
					yield return (ResourceComponent)entry;
				}
			}
		}

		public static event Action<ResourceComponent> OnInsert;
		public static event Action<ResourceComponent, ResourceComponent> OnUpdate;
		public static event Action<ResourceComponent> OnDelete;
		public static event Action<NetworkManager.TableOp, ResourceComponent, ResourceComponent> OnRowUpdate;

		public static void OnInsertEvent(object newValue)
		{
			OnInsert?.Invoke((ResourceComponent)newValue);
		}

		public static void OnUpdateEvent(object oldValue, object newValue)
		{
			OnUpdate?.Invoke((ResourceComponent)oldValue,(ResourceComponent)newValue);
		}

		public static void OnDeleteEvent(object oldValue)
		{
			OnDelete?.Invoke((ResourceComponent)oldValue);
		}

		public static void OnRowUpdateEvent(NetworkManager.TableOp op, object oldValue, object newValue)
		{
			OnRowUpdate?.Invoke(op, (ResourceComponent)oldValue,(ResourceComponent)newValue);
		}
	}
}
