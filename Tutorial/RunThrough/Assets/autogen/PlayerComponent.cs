// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

using System;

namespace SpacetimeDB
{
	public partial class PlayerComponent : IDatabaseTable
	{
		[Newtonsoft.Json.JsonProperty("entity_id")]
		public ulong EntityId;
		[Newtonsoft.Json.JsonProperty("owner_id")]
		[Newtonsoft.Json.JsonConverter(typeof(SpacetimeDB.ByteArrayConverter))]
		public byte[] OwnerId;
		[Newtonsoft.Json.JsonProperty("username")]
		public string Username;
		[Newtonsoft.Json.JsonProperty("logged_in")]
		public bool LoggedIn;

		public static SpacetimeDB.SATS.AlgebraicType GetAlgebraicType()
		{
			return SpacetimeDB.SATS.AlgebraicType.CreateProductType(new SpacetimeDB.SATS.ProductTypeElement[]
			{
				new SpacetimeDB.SATS.ProductTypeElement("entity_id", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64)),
				new SpacetimeDB.SATS.ProductTypeElement("owner_id", SpacetimeDB.SATS.AlgebraicType.CreateArrayType(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U8))),
				new SpacetimeDB.SATS.ProductTypeElement("username", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.String)),
				new SpacetimeDB.SATS.ProductTypeElement("logged_in", SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.Bool)),
			});
		}

		public static explicit operator PlayerComponent(SpacetimeDB.SATS.AlgebraicValue value)
		{
			if (value == null) {
				return null;
			}
			var productValue = value.AsProductValue();
			return new PlayerComponent
			{
				EntityId = productValue.elements[0].AsU64(),
				OwnerId = productValue.elements[1].AsBytes(),
				Username = productValue.elements[2].AsString(),
				LoggedIn = productValue.elements[3].AsBool(),
			};
		}

		public static System.Collections.Generic.IEnumerable<PlayerComponent> Iter()
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("PlayerComponent"))
			{
				yield return (PlayerComponent)entry.Item2;
			}
		}
		public static int Count()
		{
			return NetworkManager.clientDB.Count("PlayerComponent");
		}
		public static PlayerComponent FilterByEntityId(ulong value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("PlayerComponent"))
			{
				var productValue = entry.Item1.AsProductValue();
				var compareValue = (ulong)productValue.elements[0].AsU64();
				if (compareValue == value) {
					return (PlayerComponent)entry.Item2;
				}
			}
			return null;
		}

		public static PlayerComponent FilterByOwnerId(byte[] value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("PlayerComponent"))
			{
				var productValue = entry.Item1.AsProductValue();
				var compareValue = (byte[])productValue.elements[1].AsBytes();
				static bool ByteArrayCompare(byte[] a1, byte[] a2)
				{
				    if (a1.Length != a2.Length)
				        return false;

				    for (int i=0; i<a1.Length; i++)
				        if (a1[i]!=a2[i])
				            return false;

				    return true;
				}

				if (ByteArrayCompare(compareValue, value)) {
					return (PlayerComponent)entry.Item2;
				}
			}
			return null;
		}

		public static System.Collections.Generic.IEnumerable<PlayerComponent> FilterByUsername(string value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("PlayerComponent"))
			{
				var productValue = entry.Item1.AsProductValue();
				var compareValue = (string)productValue.elements[2].AsString();
				if (compareValue == value) {
					yield return (PlayerComponent)entry.Item2;
				}
			}
		}

		public static System.Collections.Generic.IEnumerable<PlayerComponent> FilterByLoggedIn(bool value)
		{
			foreach(var entry in NetworkManager.clientDB.GetEntries("PlayerComponent"))
			{
				var productValue = entry.Item1.AsProductValue();
				var compareValue = (bool)productValue.elements[3].AsBool();
				if (compareValue == value) {
					yield return (PlayerComponent)entry.Item2;
				}
			}
		}

		public static bool ComparePrimaryKey(SpacetimeDB.SATS.AlgebraicType t, SpacetimeDB.SATS.AlgebraicValue v1, SpacetimeDB.SATS.AlgebraicValue v2)
		{
			var primaryColumnValue1 = v1.AsProductValue().elements[0];
			var primaryColumnValue2 = v2.AsProductValue().elements[0];
			return SpacetimeDB.SATS.AlgebraicValue.Compare(t.product.elements[0].algebraicType, primaryColumnValue1, primaryColumnValue2);
		}

		public delegate void InsertEventHandler(PlayerComponent insertedValue, ClientApi.Event dbEvent);
		public delegate void UpdateEventHandler(PlayerComponent oldValue, PlayerComponent newValue, ClientApi.Event dbEvent);
		public delegate void DeleteEventHandler(PlayerComponent deletedValue, ClientApi.Event dbEvent);
		public delegate void RowUpdateEventHandler(NetworkManager.TableOp op, PlayerComponent oldValue, PlayerComponent newValue, ClientApi.Event dbEvent);
		public static event InsertEventHandler OnInsert;
		public static event UpdateEventHandler OnUpdate;
		public static event DeleteEventHandler OnDelete;
		public static event RowUpdateEventHandler OnRowUpdate;

		public static void OnInsertEvent(object newValue, ClientApi.Event dbEvent)
		{
			OnInsert?.Invoke((PlayerComponent)newValue,dbEvent);
		}

		public static void OnUpdateEvent(object oldValue, object newValue, ClientApi.Event dbEvent)
		{
			OnUpdate?.Invoke((PlayerComponent)oldValue,(PlayerComponent)newValue,dbEvent);
		}

		public static void OnDeleteEvent(object oldValue, ClientApi.Event dbEvent)
		{
			OnDelete?.Invoke((PlayerComponent)oldValue,dbEvent);
		}

		public static void OnRowUpdateEvent(NetworkManager.TableOp op, object oldValue, object newValue, ClientApi.Event dbEvent)
		{
			OnRowUpdate?.Invoke(op, (PlayerComponent)oldValue,(PlayerComponent)newValue,dbEvent);
		}
	}
}
